// <auto-generated />
using System;
using Assessment_CarolinaBustamante.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_CarolinaBustamante.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241115170348_ApptSeeders")]
    partial class ApptSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("notes");

                    b.Property<int>("PatiendId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatiendId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 20, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            Notes = "First-time patient, check medical history.",
                            PatiendId = 1,
                            Reason = "General consultation",
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            Notes = "Patient has a history of hypertension.",
                            PatiendId = 2,
                            Reason = "Blood pressure check",
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 11, 22, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            Notes = "Possible gastritis, prescribed medication.",
                            PatiendId = 3,
                            Reason = "Abdominal pain",
                            Status = "completed"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 11, 23, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            Notes = "",
                            PatiendId = 4,
                            Reason = "Annual check-up",
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 11, 24, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            Notes = "Patient canceled due to personal reasons.",
                            PatiendId = 5,
                            Reason = "Dermatology consultation",
                            Status = "cancelled"
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2024, 11, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            Notes = "Review lab results and discuss next steps.",
                            PatiendId = 6,
                            Reason = "Follow-up on blood tests",
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2024, 11, 26, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            Notes = "Prescribed antiviral medication.",
                            PatiendId = 7,
                            Reason = "Flu symptoms",
                            Status = "completed"
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2024, 11, 27, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            Notes = "Patient is a child, bring vaccination record.",
                            PatiendId = 8,
                            Reason = "Pediatric consultation",
                            Status = "scheduled"
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2024, 11, 28, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            Notes = "Patient requested to change the date.",
                            PatiendId = 9,
                            Reason = "Diabetes management",
                            Status = "rescheduled"
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2024, 11, 29, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            Notes = "Focus on lower back pain.",
                            PatiendId = 10,
                            Reason = "Physical therapy",
                            Status = "scheduled"
                        });
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(7, 0, 0),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0),
                            UserId = 5
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(7, 30, 0),
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new TimeOnly(16, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0),
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0),
                            UserId = 11
                        },
                        new
                        {
                            Id = 7,
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(6, 30, 0),
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0),
                            UserId = 15
                        },
                        new
                        {
                            Id = 9,
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(7, 0, 0),
                            UserId = 17
                        },
                        new
                        {
                            Id = 10,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0),
                            UserId = 19
                        });
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telephone");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Telephone = "3001234567",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Telephone = "3002345678",
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            Telephone = "3003456789",
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            Telephone = "3004567890",
                            UserId = 8
                        },
                        new
                        {
                            Id = 5,
                            Telephone = "3005678901",
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            Telephone = "3006789012",
                            UserId = 12
                        },
                        new
                        {
                            Id = 7,
                            Telephone = "3007890123",
                            UserId = 14
                        },
                        new
                        {
                            Id = 8,
                            Telephone = "3008901234",
                            UserId = 16
                        },
                        new
                        {
                            Id = 9,
                            Telephone = "3009012345",
                            UserId = 18
                        },
                        new
                        {
                            Id = 10,
                            Telephone = "3000123456",
                            UserId = 20
                        });
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "juan.perez@email.com",
                            FullName = "juan perez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ana.gomez@email.com",
                            FullName = "ana gomez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 3,
                            Email = "carlos.rodriguez@email.com",
                            FullName = "carlos rodriguez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 4,
                            Email = "laura.martinez@email.com",
                            FullName = "laura martinez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 5,
                            Email = "pedro.sanchez@email.com",
                            FullName = "pedro sanchez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 6,
                            Email = "maria.lopez@email.com",
                            FullName = "maria lopez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 7,
                            Email = "jose.garcia@email.com",
                            FullName = "jose garcia",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 8,
                            Email = "isabel.fernandez@email.com",
                            FullName = "isabel fernandez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 9,
                            Email = "david.martinez@email.com",
                            FullName = "david martinez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 10,
                            Email = "marta.rodriguez@email.com",
                            FullName = "marta rodriguez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 11,
                            Email = "alejandro.torres@email.com",
                            FullName = "alejandro torres",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 12,
                            Email = "silvia.perez@email.com",
                            FullName = "silvia perez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 13,
                            Email = "felipe.garcia@email.com",
                            FullName = "felipe garcia",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 14,
                            Email = "carla.romero@email.com",
                            FullName = "carla romero",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 15,
                            Email = "jorge.jimenez@email.com",
                            FullName = "jorge jimenez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 16,
                            Email = "luis.moreno@email.com",
                            FullName = "luis moreno",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 17,
                            Email = "patricia.ramirez@email.com",
                            FullName = "patricia ramirez",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 18,
                            Email = "manuel.diaz@email.com",
                            FullName = "manuel diaz",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        },
                        new
                        {
                            Id = 19,
                            Email = "carmen.castro@email.com",
                            FullName = "carmen castro",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "doctor"
                        },
                        new
                        {
                            Id = 20,
                            Email = "jorge.ruiz@email.com",
                            FullName = "jorge ruiz",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Role = "patient"
                        });
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Appointment", b =>
                {
                    b.HasOne("Assessment_CarolinaBustamante.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assessment_CarolinaBustamante.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatiendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Doctor", b =>
                {
                    b.HasOne("Assessment_CarolinaBustamante.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Assessment_CarolinaBustamante.Models.Patient", b =>
                {
                    b.HasOne("Assessment_CarolinaBustamante.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
